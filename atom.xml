<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[jelrik.me]]></title>
  <link href="http://jelrik.me/atom.xml" rel="self"/>
  <link href="http://jelrik.me/"/>
  <updated>2014-02-07T12:15:45+00:00</updated>
  <id>http://jelrik.me/</id>
  <author>
    <name><![CDATA[Jelrik van Hal]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bumpercar Basics]]></title>
    <link href="http://jelrik.me/blog/2014/02/07/bumpercar-basics/"/>
    <updated>2014-02-07T10:00:00+00:00</updated>
    <id>http://jelrik.me/blog/2014/02/07/bumpercar-basics</id>
    <content type="html"><![CDATA[<p>Finally, I&#8217;ve been able to put some thoughts on PHPBenelux online.</p>
<p>As conferences come, PHPBenelux 2014 simply is the one <em>to beat</em> out there. Previous editions were amazing. This year,
however, the PHPBenelux team decided to celebrate their 5th anniversary by having a bumper car ride for their attendees.
As I put a lot of effort into bumping the proverbial life out of a lot of aforementioned attendees and conference
organisers, I&#8217;d like to share with you some basics on bumper care driving.</p>
<img alt="/assets/bumper-cars/overview.jpg" src="http://jelrik.me/assets/bumper-cars/overview.jpg" />
<!-- more -->
<div class="section" id="preparation">
<h2>Preparation</h2>
<p>Make sure to protect your left knee and lower leg from bruises. You could, for example, wrap your knee in a blanket. At
PHPBenelux, this blanket was provided for by the conference organisers in the goodie bag. As though they knew what was
going to happen.</p>
</div>
<div class="section" id="basic-operation">
<h2>Basic operation</h2>
<p>When first getting into the car, note that the accelerator is positioned at the left-hand side. This makes sense when
carpooling, so that the driver can have the left seat. As soon as the bumper car ride starts, press in the gas pedal and
try and turn the wheel in a randomly chosen direction. The first part of the turn of the wheel will get you going into
the direction you&#8217;re turning. When turning the wheel further, you will notice that the car will start driving backwards.
This is a very useful feature in the case you get stuck nose-first in a pile-up during your ride.</p>
<p>And remember: such a pile-up of cars will definitely happen. More than once.</p>
<img alt="/assets/bumper-cars/pileup.jpg" src="http://jelrik.me/assets/bumper-cars/pileup.jpg" />
</div>
<div class="section" id="getting-to-know-each-other">
<h2>Getting to know each other</h2>
<p>Watch your fellows constantly and carefully. They will share their tactics with you even without them noticing. There
are different types of bumper car drivers.</p>
<ul class="simple">
<li>First, there are the <strong>die-hards</strong>. They will bump into every single car that comes close enough, even though they did
not gain enough velocity to really make a reasonable impact.</li>
<li>Second, there are the <strong>backers</strong>. Whatever may be driving them, they try to avoid most collisions (and occasionally
build up to one huge bump).</li>
<li>Third, there&#8217;s the type of bumper car driver that you want to become: the <strong>maximizer</strong>. You want to deal a maximum
amount of damage with the minimum amount of effort. You want to back out of a confrontation, only to return when you
have the clear advantage.</li>
</ul>
</div>
<div class="section" id="maximizing-impact">
<h2>Maximizing impact</h2>
<p>There are two main types of impact. The obvious physical impact will daze the opponent for a short while, as he tries to
reorient himself or inspects the damage you inflicted. There are a number of ways to inflict physical damage.</p>
<ol class="arabic simple">
<li>Bump into the side of the opponents car towards the rear end. The impact will turn their car in a direction they
don&#8217;t expect.</li>
<li>Sandwich the opponent between your own car and the side of the floor. As the side rail is fixed, your opponent will
feel all the impact instead of passing half the energy on by sliding away.</li>
</ol>
<p>The less obvious type of impact is the psychological one. The psychological impact will get your opponent off the hook
for a little bit longer than the physical impact. Furthermore, the opponent will be intimidated by your bumping prowess
and will be less inclined to attack you again every time you deal successful psychological damage. You can drain their
battle spirit in the following ways.</p>
<ol class="arabic simple">
<li>Impose a head-on bump, preferably at full speed. They will see you coming and they know they can&#8217;t do anything about
it.</li>
<li>Bump them from behind, without them noticing until you finally hit. Half of the time, they will not know what (or
who) hit them.</li>
</ol>
</div>
<div class="section" id="teaming-up-for-senior-level-bumpers">
<h2>Teaming up (for senior level bumpers)</h2>
<p>When you&#8217;re getting the hang of the whole bumping thingy, it&#8217;s time for the next step: teaming up with other players.
There is one important rule to observe before considering this, however: <strong>alliances do not last long</strong>. The moment your
mutual target is hit, consider the buddy as an opponent again. They will do the same.</p>
<img alt="/assets/bumper-cars/teaming-up.jpg" src="http://jelrik.me/assets/bumper-cars/teaming-up.jpg" />
<p><em>&quot;Why would I work together if my buddy is going to betray me anyway?&quot;</em>, you will ask. The one and only answer to that is
simple: when teaming up, you can deal more damage to others. And as dealing damage is the single objective of the game,
or war if you like, finding buddies can be quite rewarding.</p>
<p>For example, when doing the head-on bump I taught you in the previous paragraph, have a buddy hit the target from
behind, milliseconds after you hit them. This makes for an unexpected extra impact. Of course, the most fun part is to
have two buddies and corner target so that you can easily slam him onto the side rail for maximum physical and
psychological damage.</p>
<p>In short, communicate with your fellow drivers to form short-living alliances but never trust them completely.</p>
</div>
<div class="section" id="final-tips-n-tricks">
<h2>Final tips &#8216;n tricks</h2>
<ul class="simple">
<li>Constantly look for free parts of the floor, so you can gain speed and make your bumps even more worthwhile.</li>
<li>Make sure to have a clear overview of the arena. Know what is coming for you, even from behind. This minimizes the
impact a sudden attack from the rear can do to you.</li>
<li>Make sure not to have your thumbs inside the wheel, as it will hurt a lot on impact. (Thanks <a class="reference external" href="https://twitter.com/skoop">Stefan</a>)</li>
<li>Take an inflatable hammer or club for your navigator to make themselves useful. (Thanks <a class="reference external" href="https://twitter.com/mvriel">Mike</a>)</li>
</ul>
</div>
<div class="section" id="closing-remarks">
<h2>Closing remarks</h2>
<p>I would very much like to thank the organisational committee of PHPBenelux: Thijs, Paul, Jeroen, Richard, Martin,
Michelangelo and Leon! Thank you, sirs, for the conference you continue to give back to the community!</p>
<p>Of course, Mike and Stefan, my Ingewikkeld colleagues: thanks for the company in Antwerpen. Thanks to <a class="reference external" href="http://www.flickr.com/photos/seldaek/">Jordi</a> for the use
of the photo&#8217;s in this post. And as a final word: Thanks <a class="reference external" href="https://twitter.com/Luckyluz8">David</a> and <a class="reference external" href="https://twitter.com/MissYeh">Kana</a> for the awesome bumper car madness ;-).</p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XMLSchema and ISO-8601: not a match made in heaven]]></title>
    <link href="http://jelrik.me/blog/2014/02/03/xmlschema-and-iso8601/"/>
    <updated>2014-02-03T17:41:00+00:00</updated>
    <id>http://jelrik.me/blog/2014/02/03/xmlschema-and-iso8601</id>
    <content type="html"><![CDATA[<p>Ever used the <a class="reference external" href="http://en.wikipedia.org/wiki/ISO_8601">ISO-8601</a> standard to format dates in, for example, your API? And ever thought you&#8217;d be &quot;safe&quot; for all
client applications, because you adhere to an ISO standard?</p>
<p>Then I got a little surprise for you.</p>
<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;date_added&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:dateTime&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure><!-- more -->
<p>XMLSchema doesn&#8217;t implement ISO-8601 completely, something I only found out after 3 hours of debugging. When using the
<tt class="docutils literal">dateTime</tt> type, the XMLSchema definition says the following which is somewhat vague:</p>
<pre class="literal-block">
This representation simplifies interval arithmetic and leap-year calculation for dates before
the common era (which may be why astronomers and others interested in such calculations with
the proleptic Gregorian calendar have adopted it), and is consistent with the current edition
of [ISO 8601].
</pre>
<p>What they (should) mean to say is that their accepted input format is one of the formats ISO-8601 describes. The trick
is in the, optional, timezone part. ISO-8601 allows for the timezone part to be just four digits with a plus sign in
front: <tt class="docutils literal">+0900</tt>. This means that a date/time combination could be formatted as follows:</p>
<pre class="literal-block">
2014-02-06T07:06:00+0000
</pre>
<p>This format will, however, not validate through XMLSchema. It expects the most verbose syntax that is allowed by the
standard, which includes a colon <tt class="docutils literal">:</tt> between the second and third digit of the timezone. This makes kind of sense,
because in most other parts of the standard format, the separator <tt class="docutils literal">:</tt> or <tt class="docutils literal">-</tt> can be omitted as well.</p>
<p>The fun part, however, is yet to come. When working in PHP, which I do a lot, there&#8217;s a problem. In PHP, there&#8217;s the
<tt class="docutils literal">\DateTime</tt> class to work with, you&#8217;ve guessed it, dates and times.</p>
<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="cp">&lt;?php</span>
</span><span class="line"><span class="nv">$dateAndTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;now&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure><p>This class has a <tt class="docutils literal">format()</tt> method that takes a textual format pattern to determine the format you want. For your
convenience, some preconfigured formats have been defined. One example, which I used to use a lot, was the ISO-8601 one.</p>
<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="x">const string ISO8601 = &quot;Y-m-d\TH:i:sO&quot; ;</span>
</span></code></pre></td></tr></table></div></figure><p>The documentation says the following about it:</p>
<pre class="literal-block">
DATE_ISO8601
ISO-8601 (example: 2005-08-15T15:52:01+0000)
</pre>
<p>Fair enough. This adheres to the standard. But when using it to generate an XML output that will be checked using
XMLSchema, <strong>it will just fail</strong>.</p>
<p>The guys at PHP noticed this problem and solved it for us. There&#8217;s another predefined format, which is called <tt class="docutils literal">W3C</tt>.
It simply adds a <tt class="docutils literal">:</tt> and you&#8217;re good to go and use XMLSchema!</p>
<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="cp">&lt;?php</span>
</span><span class="line"><span class="nv">$dateAndTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;now&#39;</span><span class="p">);</span>
</span><span class="line"><span class="k">echo</span> <span class="nv">$dateAndTime</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="nx">\DateTime</span><span class="o">::</span><span class="na">W3C</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="c1">// Will output 2014-02-06T07:06:00+00:00</span>
</span></code></pre></td></tr></table></div></figure><p>From now on, I use the <tt class="docutils literal">W3C</tt> one everywhere. It adheres to the ISO-8601 standard just as well, but obviously allows
for more client application to run without problems!</p>

]]></content>
  </entry>
  
</feed>
